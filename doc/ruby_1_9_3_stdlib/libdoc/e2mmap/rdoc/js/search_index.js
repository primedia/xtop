var search_data = {"index":{"searchIndex":["e2mm","e2mm","fail()","fail()","fail()","fail()","raise()","raise()","raise()","raise()","bind()","bind()","def_e2message()","def_e2message()","def_e2message()","def_e2message()","def_exception()","def_exception()","def_exception()","def_exception()","e2mm_message()","e2mm_message()","extend_object()","extend_object()","fail()","fail()","message()","message()"],"longSearchIndex":["e2mm","exception2messagemapper","e2mm::fail()","e2mm::fail()","exception2messagemapper#fail()","exception2messagemapper#fail()","e2mm::raise()","e2mm::raise()","exception2messagemapper#raise()","exception2messagemapper#raise()","exception2messagemapper#bind()","exception2messagemapper#bind()","e2mm::def_e2message()","e2mm::def_e2message()","exception2messagemapper#def_e2message()","exception2messagemapper#def_e2message()","e2mm::def_exception()","e2mm::def_exception()","exception2messagemapper#def_exception()","exception2messagemapper#def_exception()","e2mm::e2mm_message()","e2mm::e2mm_message()","e2mm::extend_object()","e2mm::extend_object()","exception2messagemapper#fail()","exception2messagemapper#fail()","exception2messagemapper::message()","exception2messagemapper::message()"],"info":[["E2MM","","E2MM.html","",""],["Exception2MessageMapper","","Exception2MessageMapper.html","",""],["Fail","E2MM","E2MM.html#method-c-Fail","(klass = E2MM, err = nil, *rest)",""],["Fail","E2MM","E2MM.html#method-c-Fail","(klass = E2MM, err = nil, *rest)",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)",""],["Raise","E2MM","E2MM.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n"],["Raise","E2MM","E2MM.html#method-c-Raise","(klass = E2MM, err = nil, *rest)","<p>Fail(klass, err, *rest)\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">klass</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n<span class=\"ruby-identifier\">err</span><span class=\"ruby-operator\">:</span>    <span class=\"ruby-identifier\">exception</span>\n<span class=\"ruby-identifier\">rest</span><span class=\"ruby-operator\">:</span>   <span class=\"ruby-identifier\">message</span> <span class=\"ruby-identifier\">arguments</span>\n</pre>\n"],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n"],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n"],["bind","Exception2MessageMapper","Exception2MessageMapper.html#method-i-bind","(cl)",""],["bind","Exception2MessageMapper","Exception2MessageMapper.html#method-i-bind","(cl)",""],["def_e2message","E2MM","E2MM.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_e2message","E2MM","E2MM.html#method-c-def_e2message","(k, c, m)","<p>E2MM.def_e2message(k, e, m)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">e</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">message_form</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n"],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n"],["def_exception","E2MM","E2MM.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_exception","E2MM","E2MM.html#method-c-def_exception","(k, n, m, s = StandardError)","<p>E2MM.def_exception(k, n, m, s)\n\n<pre class=\"ruby\">    <span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-keyword\">class</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">exception</span> <span class=\"ruby-identifier\">under</span>.\n    <span class=\"ruby-identifier\">n</span><span class=\"ruby-operator\">:</span>  <span class=\"ruby-identifier\">exception_name</span>\n    <span class=\"ruby-identifier\">m</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n"],["e2mm_message","E2MM","E2MM.html#method-c-e2mm_message","(klass, exp)",""],["e2mm_message","E2MM","E2MM.html#method-c-e2mm_message","(klass, exp)",""],["extend_object","E2MM","E2MM.html#method-c-extend_object","(cl)",""],["extend_object","E2MM","E2MM.html#method-c-extend_object","(cl)",""],["fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)",""],["fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)",""],["message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-message","(klass, exp)",""],["message","Exception2MessageMapper","Exception2MessageMapper.html#method-c-message","(klass, exp)",""]]}}