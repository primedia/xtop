var search_data = {"index":{"searchIndex":["shell","appendfile","appendio","builtincommand","cat","commandprocessor","concat","echo","error","filter","glob","processcontroller","systemcommand","tee","void","+()","<()",">()",">>()","[]()","activate()","active?()","active?()","active_job?()","active_jobs()","active_jobs_exist?()","active_process_controllers()","add_delegate_command_to_shell()","add_schedule()","alias_command()","alias_command()","alias_map()","append()","block_output_synchronize()","cat()","cd()","chdir()","check_point()","concat()","debug=()","def_builtin_commands()","def_system_command()","def_system_command()","default_record_separator()","default_record_separator=()","default_system_path()","default_system_path=()","each()","each()","each()","each()","each()","each()","each()","each()","each_active_object()","echo()","expand_path()","expand_path()","find_system_command()","finish_all_jobs()","flush()","foreach()","glob()","inactivate()","initialize()","input=()","input=()","input=()","input=()","inspect()","inspect()","install_builtin_commands()","install_system_commands()","install_system_commands()","jobs()","jobs()","jobs_exist?()","kill()","kill()","kill_job()","method_added()","mkdir()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify()","notify()","notify()","open()","out()","popd()","popdir()","pushd()","pushdir()","rehash()","rmdir()","run_config()","sfork()","start()","start_export()","start_import()","start_job()","super_each()","system()","system_path=()","tee()","terminate()","terminate_job()","test()","to_a()","to_s()","top_level_test()","transact()","unalias_command()","unalias_command()","undef_system_command()","undef_system_command()","unlink()","wait?()","wait?()","wait_all_jobs_execution()","wait_to_finish_all_process_controllers()","waiting_job?()","waiting_jobs()","waiting_jobs_exist?()","|()"],"longSearchIndex":["shell","shell::appendfile","shell::appendio","shell::builtincommand","shell::cat","shell::commandprocessor","shell::concat","shell::echo","shell::error","shell::filter","shell::glob","shell::processcontroller","shell::systemcommand","shell::tee","shell::void","shell::filter#+()","shell::filter#<()","shell::filter#>()","shell::filter#>>()","shell::commandprocessor#[]()","shell::processcontroller#activate()","shell::builtincommand#active?()","shell::systemcommand#active?()","shell::processcontroller#active_job?()","shell::processcontroller#active_jobs()","shell::processcontroller#active_jobs_exist?()","shell::processcontroller#active_process_controllers()","shell::commandprocessor::add_delegate_command_to_shell()","shell::processcontroller#add_schedule()","shell::alias_command()","shell::commandprocessor::alias_command()","shell::commandprocessor::alias_map()","shell::commandprocessor#append()","shell::processcontroller#block_output_synchronize()","shell::commandprocessor#cat()","shell#cd()","shell#chdir()","shell::commandprocessor#check_point()","shell::commandprocessor#concat()","shell#debug=()","shell::commandprocessor::def_builtin_commands()","shell::def_system_command()","shell::commandprocessor::def_system_command()","shell#default_record_separator()","shell#default_record_separator=()","shell#default_system_path()","shell#default_system_path=()","shell::cat#each()","shell::concat#each()","shell::echo#each()","shell::filter#each()","shell::glob#each()","shell::systemcommand#each()","shell::tee#each()","shell::void#each()","shell::processcontroller#each_active_object()","shell::commandprocessor#echo()","shell#expand_path()","shell::commandprocessor#expand_path()","shell::commandprocessor#find_system_command()","shell::commandprocessor#finish_all_jobs()","shell::systemcommand#flush()","shell::commandprocessor#foreach()","shell::commandprocessor#glob()","shell::processcontroller#inactivate()","shell::commandprocessor::initialize()","shell::appendfile#input=()","shell::appendio#input=()","shell::filter#input=()","shell::systemcommand#input=()","shell#inspect()","shell::filter#inspect()","shell::commandprocessor::install_builtin_commands()","shell::install_system_commands()","shell::commandprocessor::install_system_commands()","shell#jobs()","shell::processcontroller#jobs()","shell::processcontroller#jobs_exist?()","shell#kill()","shell::systemcommand#kill()","shell::processcontroller#kill_job()","shell::commandprocessor::method_added()","shell::commandprocessor#mkdir()","shell::new()","shell::appendfile::new()","shell::appendio::new()","shell::cat::new()","shell::commandprocessor::new()","shell::concat::new()","shell::echo::new()","shell::filter::new()","shell::glob::new()","shell::processcontroller::new()","shell::systemcommand::new()","shell::tee::new()","shell::void::new()","shell::notify()","shell::commandprocessor#notify()","shell::systemcommand#notify()","shell::commandprocessor#open()","shell::commandprocessor#out()","shell#popd()","shell#popdir()","shell#pushd()","shell#pushdir()","shell::commandprocessor#rehash()","shell::commandprocessor#rmdir()","shell::commandprocessor::run_config()","shell::processcontroller#sfork()","shell::systemcommand#start()","shell::systemcommand#start_export()","shell::systemcommand#start_import()","shell::processcontroller#start_job()","shell::systemcommand#super_each()","shell::commandprocessor#system()","shell#system_path=()","shell::commandprocessor#tee()","shell::systemcommand#terminate()","shell::processcontroller#terminate_job()","shell::commandprocessor#test()","shell::filter#to_a()","shell::filter#to_s()","shell::commandprocessor#top_level_test()","shell::commandprocessor#transact()","shell::unalias_command()","shell::commandprocessor::unalias_command()","shell::undef_system_command()","shell::commandprocessor::undef_system_command()","shell::commandprocessor#unlink()","shell::builtincommand#wait?()","shell::systemcommand#wait?()","shell::processcontroller#wait_all_jobs_execution()","shell::processcontroller#wait_to_finish_all_process_controllers()","shell::processcontroller#waiting_job?()","shell::processcontroller#waiting_jobs()","shell::processcontroller#waiting_jobs_exist?()","shell::filter#|()"],"info":[["Shell","","Shell.html","","\n<pre>shell/filter.rb -\n    $Release Version: 0.7 $\n    $Revision: 31641 $\n    by Keiju ISHITSUKA(keiju@ruby-lang.org)</pre>\n"],["Shell::AppendFile","","Shell/AppendFile.html","",""],["Shell::AppendIO","","Shell/AppendIO.html","","<p>class Sort &lt; Cat\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>(<span class=\"ruby-identifier\">sh</span>, <span class=\"ruby-operator\">*</span><span class=\"ruby-identifier\">filenames</span>)\n  <span class=\"ruby-keyword\">super</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">each</span>(<span class=\"ruby-identifier\">rs</span> = <span class=\"ruby-keyword\">nil</span>)\n  <span class=\"ruby-identifier\">ary</span> = []\n  <span class=\"ruby-keyword\">super</span>{<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">l</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Shell::BuiltInCommand","","Shell/BuiltInCommand.html","",""],["Shell::Cat","","Shell/Cat.html","",""],["Shell::CommandProcessor","","Shell/CommandProcessor.html","",""],["Shell::Concat","","Shell/Concat.html","",""],["Shell::Echo","","Shell/Echo.html","",""],["Shell::Error","","Shell/Error.html","",""],["Shell::Filter","","Shell/Filter.html","","<p>Filter A method to require\n\n<pre>each()</pre>\n"],["Shell::Glob","","Shell/Glob.html","",""],["Shell::ProcessController","","Shell/ProcessController.html","",""],["Shell::SystemCommand","","Shell/SystemCommand.html","",""],["Shell::Tee","","Shell/Tee.html","",""],["Shell::Void","","Shell/Void.html","",""],["+","Shell::Filter","Shell/Filter.html#method-i-2B","(filter)",""],["<","Shell::Filter","Shell/Filter.html#method-i-3C","(src)",""],[">","Shell::Filter","Shell/Filter.html#method-i-3E","(to)",""],[">>","Shell::Filter","Shell/Filter.html#method-i-3E-3E","(to)",""],["[]","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-5B-5D","(command, file1, file2=nil)",""],["activate","Shell::ProcessController","Shell/ProcessController.html#method-i-activate","(pc)",""],["active?","Shell::BuiltInCommand","Shell/BuiltInCommand.html#method-i-active-3F","()",""],["active?","Shell::SystemCommand","Shell/SystemCommand.html#method-i-active-3F","()",""],["active_job?","Shell::ProcessController","Shell/ProcessController.html#method-i-active_job-3F","(job)",""],["active_jobs","Shell::ProcessController","Shell/ProcessController.html#method-i-active_jobs","()",""],["active_jobs_exist?","Shell::ProcessController","Shell/ProcessController.html#method-i-active_jobs_exist-3F","()",""],["active_process_controllers","Shell::ProcessController","Shell/ProcessController.html#method-i-active_process_controllers","()",""],["add_delegate_command_to_shell","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-add_delegate_command_to_shell","(id)",""],["add_schedule","Shell::ProcessController","Shell/ProcessController.html#method-i-add_schedule","(command)","<p>schedule a command\n"],["alias_command","Shell","Shell.html#method-c-alias_command","(ali, command, *opts, &block)",""],["alias_command","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-alias_command","(ali, command, *opts, &block)",""],["alias_map","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-alias_map","()",""],["append","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-append","(to, filter)",""],["block_output_synchronize","Shell::ProcessController","Shell/ProcessController.html#method-i-block_output_synchronize","(&b)",""],["cat","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-cat","(*filenames)",""],["cd","Shell","Shell.html#method-i-cd","(path)",""],["chdir","Shell","Shell.html#method-i-chdir","(path = nil, verbose = @verbose)","<p>If called as iterator, it restores the current directory when the block\nends.\n"],["check_point","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-check_point","()","<p>ProcessCommand#transact\n"],["concat","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-concat","(*jobs)",""],["debug=","Shell","Shell.html#method-i-debug-3D","(val)",""],["def_builtin_commands","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-def_builtin_commands","(delegation_class, command_specs)","<p>CommandProcessor.def_builtin_commands(delegation_class, command_specs)\n\n<pre>  delegation_class: Class or Module ...</pre>\n"],["def_system_command","Shell","Shell.html#method-c-def_system_command","(command, path = command)","<p>command definitions\n"],["def_system_command","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-def_system_command","(command, path = command)","<p>CommandProcessor.def_system_command(command, path)\n\n<pre>  command:  String\n  path:     String\ndefine 'command()' ...</pre>\n"],["default_record_separator","Shell","Shell.html#method-i-default_record_separator","()",""],["default_record_separator=","Shell","Shell.html#method-i-default_record_separator-3D","(rs)",""],["default_system_path","Shell","Shell.html#method-i-default_system_path","()",""],["default_system_path=","Shell","Shell.html#method-i-default_system_path-3D","(path)",""],["each","Shell::Cat","Shell/Cat.html#method-i-each","(rs = nil)",""],["each","Shell::Concat","Shell/Concat.html#method-i-each","(rs = nil)",""],["each","Shell::Echo","Shell/Echo.html#method-i-each","(rs = nil)",""],["each","Shell::Filter","Shell/Filter.html#method-i-each","(rs = nil)",""],["each","Shell::Glob","Shell/Glob.html#method-i-each","(rs = nil)",""],["each","Shell::SystemCommand","Shell/SystemCommand.html#method-i-each","(rs = nil)",""],["each","Shell::Tee","Shell/Tee.html#method-i-each","(rs = nil)",""],["each","Shell::Void","Shell/Void.html#method-i-each","(rs = nil)",""],["each_active_object","Shell::ProcessController","Shell/ProcessController.html#method-i-each_active_object","()",""],["echo","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-echo","(*strings)",""],["expand_path","Shell","Shell.html#method-i-expand_path","(path)",""],["expand_path","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-expand_path","(path)","<p>CommandProcessor#expand_path(path)\n\n<pre>  path:   String\n  return: String\nreturns the absolute path for &lt;path&gt;</pre>\n"],["find_system_command","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-find_system_command","(command)","<p>private functions\n"],["finish_all_jobs","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-finish_all_jobs","()",""],["flush","Shell::SystemCommand","Shell/SystemCommand.html#method-i-flush","()",""],["foreach","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-foreach","(path = nil, *rs)","<p>File related commands Shell#foreach Shell#open Shell#unlink Shell#test\n<p>-\n<p>CommandProcessor#foreach(path, …\n"],["glob","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-glob","(pattern)","<p>def sort(*filenames)\n\n<pre>Sort.new(self, *filenames)</pre>\n<p>end\n"],["inactivate","Shell::ProcessController","Shell/ProcessController.html#method-i-inactivate","(pc)",""],["initialize","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-initialize","()",""],["input=","Shell::AppendFile","Shell/AppendFile.html#method-i-input-3D","(filter)",""],["input=","Shell::AppendIO","Shell/AppendIO.html#method-i-input-3D","(filter)",""],["input=","Shell::Filter","Shell/Filter.html#method-i-input-3D","(filter)",""],["input=","Shell::SystemCommand","Shell/SystemCommand.html#method-i-input-3D","(inp)",""],["inspect","Shell","Shell.html#method-i-inspect","()",""],["inspect","Shell::Filter","Shell/Filter.html#method-i-inspect","()",""],["install_builtin_commands","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-install_builtin_commands","()","<p>define default builtin commands\n"],["install_system_commands","Shell","Shell.html#method-c-install_system_commands","(pre = \"sys_\")",""],["install_system_commands","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-install_system_commands","(pre = \"sys_\")","<p>CommandProcessor.install_system_commands(pre)\n\n<pre>pre: String - command name prefix</pre>\n<p>defines every command which …\n"],["jobs","Shell","Shell.html#method-i-jobs","()","<p>process management\n"],["jobs","Shell::ProcessController","Shell/ProcessController.html#method-i-jobs","()",""],["jobs_exist?","Shell::ProcessController","Shell/ProcessController.html#method-i-jobs_exist-3F","()",""],["kill","Shell","Shell.html#method-i-kill","(sig, command)",""],["kill","Shell::SystemCommand","Shell/SystemCommand.html#method-i-kill","(sig)",""],["kill_job","Shell::ProcessController","Shell/ProcessController.html#method-i-kill_job","(sig, command)","<p>kill a job\n"],["method_added","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-method_added","(id)",""],["mkdir","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-mkdir","(*path)","<p>Dir related methods\n<p>Shell#mkdir Shell#rmdir\n"],["new","Shell","Shell.html#method-c-new","(pwd = Dir.pwd, umask = nil)",""],["new","Shell::AppendFile","Shell/AppendFile.html#method-c-new","(sh, to_filename, filter)",""],["new","Shell::AppendIO","Shell/AppendIO.html#method-c-new","(sh, io, filter)",""],["new","Shell::Cat","Shell/Cat.html#method-c-new","(sh, *filenames)",""],["new","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-new","(shell)",""],["new","Shell::Concat","Shell/Concat.html#method-c-new","(sh, *jobs)",""],["new","Shell::Echo","Shell/Echo.html#method-c-new","(sh, *strings)",""],["new","Shell::Filter","Shell/Filter.html#method-c-new","(sh)",""],["new","Shell::Glob","Shell/Glob.html#method-c-new","(sh, pattern)",""],["new","Shell::ProcessController","Shell/ProcessController.html#method-c-new","(shell)",""],["new","Shell::SystemCommand","Shell/SystemCommand.html#method-c-new","(sh, command, *opts)",""],["new","Shell::Tee","Shell/Tee.html#method-c-new","(sh, filename)",""],["new","Shell::Void","Shell/Void.html#method-c-new","(sh, *opts)",""],["notify","Shell","Shell.html#method-c-notify","(*opts, &block)",""],["notify","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-notify","(*opts, &block)","<p>%pwd, %cwd -&gt; @pwd\n"],["notify","Shell::SystemCommand","Shell/SystemCommand.html#method-i-notify","(*opts, &block)","<p>ex)\n\n<pre>if you wish to output:\n   &quot;shell: job(#{@command}:#{@pid}) close pipe-out.&quot;\nthen\n   mes: &quot;job(%id) ...</pre>\n"],["open","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-open","(path, mode = nil, perm = 0666, &b)","<p>CommandProcessor#open(path, mode)\n\n<pre>  path:   String\n  mode:   String\n  return: File or Dir\nSame as:\n  File#open ...</pre>\n"],["out","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-out","(dev = STDOUT, &block)","<p>internal commands\n"],["popd","Shell","Shell.html#method-i-popd","()",""],["popdir","Shell","Shell.html#method-i-popdir","()",""],["pushd","Shell","Shell.html#method-i-pushd","(path = nil, verbose = @verbose)",""],["pushdir","Shell","Shell.html#method-i-pushdir","(path = nil, verbose = @verbose)",""],["rehash","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-rehash","()","<p>ProcessCommand#rehash\n\n<pre>clear command hash table.</pre>\n"],["rmdir","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-rmdir","(*path)","<p>CommandProcessor#rmdir(*path)\n\n<pre>  path: String\nsame as Dir.rmdir()</pre>\n"],["run_config","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-run_config","()","<p>include run file.\n"],["sfork","Shell::ProcessController","Shell/ProcessController.html#method-i-sfork","(command, &block)","<p>simple fork\n"],["start","Shell::SystemCommand","Shell/SystemCommand.html#method-i-start","()",""],["start_export","Shell::SystemCommand","Shell/SystemCommand.html#method-i-start_export","()",""],["start_import","Shell::SystemCommand","Shell/SystemCommand.html#method-i-start_import","()",""],["start_job","Shell::ProcessController","Shell/ProcessController.html#method-i-start_job","(command = nil)","<p>start a job\n"],["super_each","Shell::SystemCommand","Shell/SystemCommand.html#method-i-super_each","(rs = nil)",""],["system","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-system","(command, *opts)","<p>CommandProcessor#system(command, *opts)\n\n<pre>  command: String\n  opts:    String\n  return:  SystemCommand\nSame ...</pre>\n"],["system_path=","Shell","Shell.html#method-i-system_path-3D","(path)",""],["tee","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-tee","(file)",""],["terminate","Shell::SystemCommand","Shell/SystemCommand.html#method-i-terminate","()",""],["terminate_job","Shell::ProcessController","Shell/ProcessController.html#method-i-terminate_job","(command)","<p>terminate a job\n"],["test","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-test","(command, file1, file2=nil)",""],["to_a","Shell::Filter","Shell/Filter.html#method-i-to_a","()",""],["to_s","Shell::Filter","Shell/Filter.html#method-i-to_s","()",""],["top_level_test","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-top_level_test","(command, file1, file2=nil)","<p>CommandProcessor#test(command, file1, file2) CommandProcessor#[command,\nfile1, file2]\n\n<pre>  command: char ...</pre>\n"],["transact","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-transact","(&block)",""],["unalias_command","Shell","Shell.html#method-c-unalias_command","(ali)",""],["unalias_command","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-unalias_command","(ali)",""],["undef_system_command","Shell","Shell.html#method-c-undef_system_command","(command)",""],["undef_system_command","Shell::CommandProcessor","Shell/CommandProcessor.html#method-c-undef_system_command","(command)",""],["unlink","Shell::CommandProcessor","Shell/CommandProcessor.html#method-i-unlink","(path)","<p>CommandProcessor#unlink(path)\n\n<pre>same as:\n  Dir#unlink  (when path is directory)\n  File#unlink (when path ...</pre>\n"],["wait?","Shell::BuiltInCommand","Shell/BuiltInCommand.html#method-i-wait-3F","()",""],["wait?","Shell::SystemCommand","Shell/SystemCommand.html#method-i-wait-3F","()",""],["wait_all_jobs_execution","Shell::ProcessController","Shell/ProcessController.html#method-i-wait_all_jobs_execution","()","<p>wait for all jobs to terminate\n"],["wait_to_finish_all_process_controllers","Shell::ProcessController","Shell/ProcessController.html#method-i-wait_to_finish_all_process_controllers","()",""],["waiting_job?","Shell::ProcessController","Shell/ProcessController.html#method-i-waiting_job-3F","(job)",""],["waiting_jobs","Shell::ProcessController","Shell/ProcessController.html#method-i-waiting_jobs","()",""],["waiting_jobs_exist?","Shell::ProcessController","Shell/ProcessController.html#method-i-waiting_jobs_exist-3F","()",""],["|","Shell::Filter","Shell/Filter.html#method-i-7C","(filter)",""]]}}