var search_data = {"index":{"searchIndex":["syslog","constants","log_mask()","log_mask()","log_upto()","log_upto()","close()","facility()","ident()","inspect()","instance()","log()","mask()","mask=()","open()","open!()","opened?()","options()","reopen()"],"longSearchIndex":["syslog","syslog::constants","syslog::log_mask()","syslog::constants::log_mask()","syslog::log_upto()","syslog::constants::log_upto()","syslog::close()","syslog::facility()","syslog::ident()","syslog::inspect()","syslog::instance()","syslog::log()","syslog::mask()","syslog::mask=()","syslog::open()","syslog::open!()","syslog::opened?()","syslog::options()","syslog::reopen()"],"info":[["Syslog","","Syslog.html","","<p>The syslog package provides a Ruby interface to the POSIX system logging\nfacility.\n<p>Syslog messages are …\n"],["Syslog::Constants","","Syslog/Constants.html","","<p>Module holding Syslog constants.  See Syslog::log and Syslog::open for\nconstant descriptions.\n"],["LOG_MASK","Syslog","Syslog.html#method-c-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n"],["LOG_MASK","Syslog::Constants","Syslog/Constants.html#method-c-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n"],["LOG_UPTO","Syslog","Syslog.html#method-c-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified.\nSee #mask=\n"],["LOG_UPTO","Syslog::Constants","Syslog/Constants.html#method-c-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified.\nSee #mask=\n"],["close","Syslog","Syslog.html#method-c-close","()","<p>Closes the syslog facility. Raises a runtime exception if it is not open.\n"],["facility","Syslog","Syslog.html#method-c-facility","()","<p>Returns the facility number used in the last call to open()\n"],["ident","Syslog","Syslog.html#method-c-ident","()","<p>Returns the identity string used in the last call to open()\n"],["inspect","Syslog","Syslog.html#method-c-inspect","()","<p>Returns an inspect() string summarizing the object state.\n"],["instance","Syslog","Syslog.html#method-c-instance","()","<p>Returns self, for backward compatibility.\n"],["log","Syslog","Syslog.html#method-c-log","(*args)","<p>Log a message with the specified priority. Example:\n\n<pre>Syslog.log(Syslog::LOG_CRIT, &quot;Out of disk space&quot;) ...</pre>\n"],["mask","Syslog","Syslog.html#method-c-mask","()","<p>Returns the log priority mask in effect. The mask is not reset by opening\nor closing syslog.\n"],["mask=","Syslog","Syslog.html#method-c-mask-3D","(p1)","<p>Sets the log priority mask. A method LOG_UPTO is defined to make it easier\nto set mask values. Example: …\n"],["open","Syslog","Syslog.html#method-c-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Open the syslog facility. Raises a runtime exception if it is already open.\n<p>Can be called with or without …\n"],["open!","Syslog","Syslog.html#method-c-open-21","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n"],["opened?","Syslog","Syslog.html#method-c-opened-3F","()","<p>Returns true if the syslog is open.\n"],["options","Syslog","Syslog.html#method-c-options","()","<p>Returns the options bitmask used in the last call to open()\n"],["reopen","Syslog","Syslog.html#method-c-reopen","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n"]]}}